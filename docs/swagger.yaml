definitions:
  controller.OpenidConfigurationDto:
    properties:
      authorization_endpoint:
        type: string
      claims_supported:
        items:
          type: string
        type: array
      id_token_signing_alg_values_supported:
        items:
          type: string
        type: array
      issuer:
        type: string
      jwks_uri:
        type: string
      request_uri_parameter_supported:
        type: boolean
      response_types_supported:
        items:
          type: string
        type: array
      scopes_supported:
        items:
          type: string
        type: array
      subject_types_supported:
        items:
          type: string
        type: array
      token_endpoint:
        type: string
      token_endpoint_auth_methods_supported:
        items:
          type: string
        type: array
      userinfo_endpoint:
        type: string
    type: object
  request.AppReq:
    type: object
  request.AppSecretReq:
    properties:
      describe:
        type: string
      scope:
        type: string
    type: object
  request.ProviderReq:
    properties:
      agentId:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
    type: object
  request.RedirectUriReq:
    properties:
      uri:
        type: string
    type: object
  request.TenantReq:
    properties:
      accessExpire:
        type: integer
      codeExpire:
        type: integer
      company:
        type: string
      describe:
        type: string
      host:
        type: string
      idExpire:
        type: integer
      isCode:
        type: integer
      isCredential:
        type: integer
      isDeviceFlow:
        type: integer
      isDisabled:
        type: integer
      isPassword:
        type: integer
      isRefresh:
        type: integer
      name:
        type: string
      refreshExpire:
        type: integer
      type:
        type: integer
      userPoolId:
        type: integer
    type: object
  request.UserPoolReq:
    properties:
      describe:
        type: string
      name:
        type: string
    type: object
  request.UserReq:
    properties:
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      type:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  license:
    name: MIT
    url: https://github.com/hello-jiangxiaoyu/QuickAuth/blob/main/LICENSE
  title: swagger 接口文档
  version: "1.0"
paths:
  /api/quick/.well-known/jwks.json:
    get:
      description: get jwks
      responses:
        "200":
          description: OK
      summary: get jwks
      tags:
      - oidc
  /api/quick/.well-known/openid-configuration:
    get:
      description: get open id configuration
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.OpenidConfigurationDto'
      summary: get OIDC
      tags:
      - oidc
  /api/quick/apps:
    get:
      description: list apps
      responses:
        "200":
          description: OK
      summary: apps info
      tags:
      - app
    post:
      description: create app
      parameters:
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppReq'
      responses:
        "200":
          description: OK
      summary: create app
      tags:
      - app
  /api/quick/apps/{appId}:
    delete:
      description: delete app
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete app
      tags:
      - app
    get:
      description: list apps
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: apps info
      tags:
      - app
    put:
      description: modify app
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppReq'
      responses:
        "200":
          description: OK
      summary: modify app
      tags:
      - app
  /api/quick/apps/{appId}/redirect-uri:
    get:
      description: get redirect uri list
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: path
        name: vhost
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get redirect uri list
      tags:
      - tenant
    post:
      description: create app redirect uri
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: path
        name: vhost
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.RedirectUriReq'
      responses:
        "200":
          description: OK
      summary: create app redirect uri
      tags:
      - tenant
  /api/quick/apps/{appId}/redirect-uri/{uri}:
    delete:
      description: delete app
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: path
        name: vhost
        required: true
        type: string
      - description: uri name
        in: path
        name: uri
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete app
      tags:
      - tenant
  /api/quick/apps/{appId}/redirect-uri/{uriId}:
    put:
      description: modify app
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: path
        name: vhost
        required: true
        type: string
      - description: uri id
        in: path
        name: uriId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.RedirectUriReq'
      responses:
        "200":
          description: OK
      summary: modify app redirect uri
      tags:
      - tenant
  /api/quick/apps/{appId}/secrets:
    get:
      description: list app secret
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: app secret info
      tags:
      - app
    post:
      description: create app secret
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppSecretReq'
      responses:
        "200":
          description: OK
      summary: create app secret
      tags:
      - app
  /api/quick/apps/{appId}/secrets/{secretId}:
    delete:
      description: delete app secret
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: secret id
        in: path
        name: secretId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete app secret
      tags:
      - app
    put:
      description: create app secret
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: secret id
        in: path
        name: secretId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppSecretReq'
      responses:
        "200":
          description: OK
      summary: create app secret
      tags:
      - app
  /api/quick/apps/{appId}/tenants:
    delete:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - tenant
    get:
      description: list provider info
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: provider info
      tags:
      - tenant
    post:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.TenantReq'
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - tenant
    put:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.TenantReq'
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - tenant
  /api/quick/apps/{appId}/tenants/current:
    get:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - tenant
  /api/quick/login:
    post:
      description: login using username and password
      parameters:
      - description: username
        in: formData
        name: username
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "200":
          description: OK
      summary: login a user
      tags:
      - login
  /api/quick/login/providers/{provider}:
    get:
      description: login third provider callback
      parameters:
      - description: provider name
        in: path
        name: provider
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: provider callback
      tags:
      - login
  /api/quick/logout:
    get:
      description: logout current user
      responses:
        "200":
          description: OK
      summary: logout current user
      tags:
      - login
  /api/quick/me/profile:
    get:
      description: get jwks
      responses:
        "200":
          description: OK
      summary: get jwks
      tags:
      - oidc
  /api/quick/oauth2/auth:
    get:
      description: oauth2 authorize
      parameters:
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: scope
        in: query
        name: scope
        required: true
        type: string
      - description: response_type
        in: query
        name: response_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        required: true
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "200":
          description: OK
        "302":
          description: Found
      summary: oauth2 authorize
      tags:
      - oauth2
  /api/quick/providers:
    get:
      description: list provider info
      responses:
        "200":
          description: OK
      summary: provider info
      tags:
      - provider
  /api/quick/providers/{providerId}:
    delete:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: providerId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - provider
    get:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: providerId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - provider
    post:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: providerId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.ProviderReq'
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - provider
    put:
      description: get provider details
      parameters:
      - description: app id
        in: path
        name: providerId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.ProviderReq'
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - provider
  /api/quick/user-pools:
    get:
      description: list user pool
      responses:
        "200":
          description: OK
      summary: user pools info
      tags:
      - user
    post:
      description: create user pool
      parameters:
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserPoolReq'
      responses:
        "200":
          description: OK
      summary: create user pool
      tags:
      - user
  /api/quick/user-pools/{poolId}:
    delete:
      description: delete user pool
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete user pool
      tags:
      - user
    get:
      description: list user pool
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: user pool info
      tags:
      - user
    put:
      description: modify user pool
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserPoolReq'
      responses:
        "200":
          description: OK
      summary: modify user pool
      tags:
      - user
  /api/quick/user-pools/{poolId}/users:
    get:
      description: list users
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: user info
      tags:
      - user
    post:
      description: create user
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserReq'
      responses:
        "200":
          description: OK
      summary: create user
      tags:
      - user
  /api/quick/user-pools/{poolId}/users/{userId}:
    delete:
      description: delete user
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete user
      tags:
      - user
    get:
      description: list user
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: user info
      tags:
      - user
    put:
      description: modify user
      parameters:
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserReq'
      responses:
        "200":
          description: OK
      summary: modify user
      tags:
      - user
  /v1/oauth2/token:
    post:
      description: oauth2 token
      parameters:
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: client_secret
        in: query
        name: client_secret
        type: string
      - description: code
        in: query
        name: code
        type: string
      - description: grant_type
        in: query
        name: grant_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "200":
          description: OK
      summary: oauth2 token
      tags:
      - oauth2
securityDefinitions:
  Login:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
