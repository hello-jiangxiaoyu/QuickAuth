definitions:
  model.RequestResourceGroup:
    properties:
      actionIds:
        items:
          type: integer
        type: array
      description:
        type: string
      name:
        type: string
      roleId:
        type: integer
      uid:
        type: integer
      userIds:
        items:
          type: integer
        type: array
    type: object
  oauth.OpenidConfigurationDto:
    properties:
      authorization_endpoint:
        type: string
      claims_supported:
        items:
          type: string
        type: array
      id_token_signing_alg_values_supported:
        items:
          type: string
        type: array
      issuer:
        type: string
      jwks_uri:
        type: string
      request_uri_parameter_supported:
        type: boolean
      response_types_supported:
        items:
          type: string
        type: array
      scopes_supported:
        items:
          type: string
        type: array
      subject_types_supported:
        items:
          type: string
        type: array
      token_endpoint:
        type: string
      token_endpoint_auth_methods_supported:
        items:
          type: string
        type: array
      userinfo_endpoint:
        type: string
    type: object
  request.AppReq:
    properties:
      describe:
        type: string
      host:
        type: string
      icon:
        type: string
      name:
        type: string
      poolId:
        type: integer
      tag:
        type: string
    required:
    - describe
    - host
    - icon
    - name
    - tag
    type: object
  request.AppSecretReq:
    properties:
      accessExpire:
        type: integer
      describe:
        type: string
      refreshExpire:
        type: integer
      scope:
        items:
          type: string
        type: array
    type: object
  request.ProviderReq:
    properties:
      agentId:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
      type:
        type: string
    type: object
  request.RedirectUriReq:
    properties:
      uri:
        type: string
    type: object
  request.TenantReq:
    properties:
      accessExpire:
        type: integer
      codeExpire:
        type: integer
      company:
        type: string
      describe:
        type: string
      grantTypes:
        items:
          type: string
        type: array
      host:
        type: string
      idExpire:
        type: integer
      isCode:
        type: boolean
      isCredential:
        type: boolean
      isDeviceFlow:
        type: boolean
      isDisabled:
        type: boolean
      isPassword:
        type: boolean
      isRefresh:
        type: boolean
      name:
        type: string
      refreshExpire:
        type: integer
      type:
        type: integer
      userPoolId:
        type: integer
    required:
    - company
    - host
    - name
    - userPoolId
    type: object
  request.UserPoolReq:
    properties:
      describe:
        type: string
      name:
        type: string
    type: object
  request.UserReq:
    properties:
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      type:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  license:
    name: MIT
    url: https://github.com/hello-jiangxiaoyu/QuickAuth/blob/main/LICENSE
  title: Quick Auth 接口文档
  version: "1.0"
paths:
  /api/quick/.well-known/jwks.json:
    get:
      responses:
        "200":
          description: OK
      summary: get jwks
      tags:
      - oidc
  /api/quick/.well-known/openid-configuration:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.OpenidConfigurationDto'
      summary: get open id configuration
      tags:
      - oidc
  /api/quick/apps:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      responses:
        "200":
          description: OK
      summary: list apps
      tags:
      - app
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppReq'
      responses:
        "200":
          description: OK
      summary: create app
      tags:
      - app
  /api/quick/apps/{appId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete app
      tags:
      - app
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get app
      tags:
      - app
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppReq'
      responses:
        "200":
          description: OK
      summary: modify app
      tags:
      - app
  /api/quick/apps/{appId}/secrets:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: list app secret
      tags:
      - app
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppSecretReq'
      responses:
        "200":
          description: OK
      summary: create app secret
      tags:
      - app
  /api/quick/apps/{appId}/secrets/{secretId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: secret id
        in: path
        name: secretId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete app secret
      tags:
      - app
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: secret id
        in: path
        name: secretId
        required: true
        type: integer
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.AppSecretReq'
      responses:
        "200":
          description: OK
      summary: create app secret
      tags:
      - app
  /api/quick/apps/{appId}/tenants:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get tenant list
      tags:
      - tenant
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.TenantReq'
      responses:
        "200":
          description: OK
      summary: create tenant
      tags:
      - tenant
  /api/quick/apps/{appId}/tenants/{tenantId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant id
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete tenant
      tags:
      - tenant
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant id
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get tenant details
      tags:
      - tenant
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: app id
        in: path
        name: appId
        required: true
        type: string
      - description: tenant id
        in: path
        name: tenantId
        required: true
        type: integer
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.TenantReq'
      responses:
        "200":
          description: OK
      summary: modify tenant
      tags:
      - tenant
  /api/quick/login:
    post:
      parameters:
      - description: username
        in: formData
        name: username
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "200":
          description: OK
      summary: login using username and password
      tags:
      - login
  /api/quick/login/providers/{providerId}:
    get:
      parameters:
      - description: provider name
        in: path
        name: provider
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "200":
          description: OK
      summary: login third provider
      tags:
      - login
  /api/quick/login/providers/{providerId}/callback:
    get:
      parameters:
      - description: provider name
        in: path
        name: provider
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "200":
          description: OK
      summary: login third provider callback
      tags:
      - login
  /api/quick/logout:
    get:
      responses:
        "200":
          description: OK
      summary: logout current user
      tags:
      - login
  /api/quick/me/profile:
    get:
      responses:
        "200":
          description: OK
      summary: get jwks
      tags:
      - oidc
  /api/quick/oauth2/auth:
    get:
      parameters:
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: scope
        in: query
        name: scope
        required: true
        type: string
      - description: response_type
        in: query
        name: response_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        required: true
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "302":
          description: Found
      summary: oauth2 authorize
      tags:
      - oidc
  /api/quick/oauth2/token:
    post:
      parameters:
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: client_secret
        in: query
        name: client_secret
        type: string
      - description: code
        in: query
        name: code
        type: string
      - description: grant_type
        in: query
        name: grant_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "200":
          description: OK
      summary: oauth2 token
      tags:
      - oidc
  /api/quick/providers:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      responses:
        "200":
          description: OK
      summary: list provider info
      tags:
      - provider
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.ProviderReq'
      responses:
        "200":
          description: OK
      summary: create provider
      tags:
      - provider
  /api/quick/providers/{providerId}:
    delete:
      parameters:
      - description: provider id
        in: path
        name: providerId
        required: true
        type: integer
      - description: tenant host
        in: header
        name: vhost
        type: string
      responses:
        "200":
          description: OK
      summary: delete provider
      tags:
      - provider
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: provider id
        in: path
        name: providerId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get provider details
      tags:
      - provider
    put:
      parameters:
      - description: provider id
        in: path
        name: providerId
        required: true
        type: integer
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.ProviderReq'
      responses:
        "200":
          description: OK
      summary: modify provider
      tags:
      - provider
  /api/quick/redirect-uri:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: get redirect uri list
      tags:
      - tenant
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.RedirectUriReq'
      responses:
        "200":
          description: OK
      summary: create app redirect uri
      tags:
      - tenant
  /api/quick/redirect-uri/{uri}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: uri name
        in: path
        name: uri
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete app
      tags:
      - tenant
  /api/quick/redirect-uri/{uriId}:
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: tenant host
        in: header
        name: vhost
        type: string
      - description: uri id
        in: path
        name: uriId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.RedirectUriReq'
      responses:
        "200":
          description: OK
      summary: modify app
      tags:
      - tenant
  /api/quick/register:
    post:
      parameters:
      - description: username
        in: formData
        name: username
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "200":
          description: OK
      summary: login using username and password
      tags:
      - login
  /api/quick/resourceGroups:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组列表
      tags:
      - resource-group
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源组
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组
      tags:
      - resource-group
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组详细信息
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/actions:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组动作列表
      tags:
      - resource-group
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源组动作
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/actions/{actionId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组动作
      tags:
      - resource-group
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组动作
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      - description: body
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组动作
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/resources:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组的资源列表
      tags:
      - resource-group
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源的资源
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/resources/{resourceId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组的资源
      tags:
      - resource-group
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组的资源
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组的资源
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/roles:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色列表
      tags:
      - resource-group
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源角色
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/roles/{roleId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组角色
      tags:
      - resource-group
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组角色
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/roles/{roleId}/actions:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组角色的动作
      tags:
      - resource-group
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色的动作列表
      tags:
      - resource-group
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源角色的动作
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组角色的动作
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/roles/{roleId}/actions/{actionsId}:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色的动作
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/roles/{roleId}/users:
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 将用户拉入组内
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/users:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 组内用户列表
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/users/{userId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: client user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 踢出用户
      tags:
      - resource-group
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: client user id
        in: path
        name: userId
        required: true
        type: integer
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 修改用户在组内的角色
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/users/{userId}/actions:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: client user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 用户在组内所拥有的权限列表
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/users/{userId}/actions/{actionId}:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: client user id
        in: path
        name: userId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 用户在组内是否拥有某个权限
      tags:
      - resource-group
  /api/quick/resourceGroups/{groupId}/users/{userId}/roles:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: client user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 用户在组内的角色
      tags:
      - resource-group
  /api/quick/resources:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resources
      tags:
      - ABAC
    post:
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource
      tags:
      - ABAC
  /api/quick/resources/{resourceId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource
      tags:
      - ABAC
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: get resource
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/json/operations/{operationId}:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: json path
        in: query
        name: path
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 判断用户当前对JSON资源的操作是否被允许
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/json/operations/{operationId}/json:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: 获取拥有某个操作权限的整个json结构
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/json/operations/{operationId}/parents/:parentId:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: 获取拥有某个操作权限的node列表
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/json/users/{userId}/roles:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource json user roles
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource json user role
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/json/users/{userId}/roles/{roleId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource json user role
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource json user role
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/nodes:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource nodes
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource node
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/nodes/{nodeId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource node
      tags:
      - ABAC
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: get resource node
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource node
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/nodes/{nodeId}/operations/{operationId}:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 判断用户当前对资源的操作是否被允许
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/operations:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource operations
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource operation
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/operations/{operationId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource operation
      tags:
      - ABAC
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: get resource operation
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource operation
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/roles:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource roles
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource role
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/roles/{roleId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource role
      tags:
      - ABAC
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: get resource role
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource role
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/roles/{roleId}/operations:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource role operations
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource role operation
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/roles/{roleId}/operations/{operationId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: operation id
        in: path
        name: operationId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource role operation
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/users/{userId}/roles:
    get:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: list resource json user roles
      tags:
      - ABAC
    post:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      summary: create resource json user role
      tags:
      - ABAC
  /api/quick/resources/{resourceId}/users/{userId}/roles/{roleId}:
    delete:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete resource json user role
      tags:
      - ABAC
    put:
      parameters:
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update resource json user role
      tags:
      - ABAC
  /api/quick/user-pools:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      responses:
        "200":
          description: OK
      summary: list user pool
      tags:
      - user
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserPoolReq'
      responses:
        "200":
          description: OK
      summary: create user pool
      tags:
      - user
  /api/quick/user-pools/{poolId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete user pool
      tags:
      - user
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get user pool info
      tags:
      - user
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserPoolReq'
      responses:
        "200":
          description: OK
      summary: modify user pool
      tags:
      - user
  /api/quick/user-pools/{poolId}/users:
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: list users
      tags:
      - user
    post:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserReq'
      responses:
        "200":
          description: OK
      summary: create user
      tags:
      - user
  /api/quick/user-pools/{poolId}/users/{userId}:
    delete:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete user
      tags:
      - user
    get:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get user info
      tags:
      - user
    put:
      parameters:
      - description: user id
        in: header
        name: X-User-ID
        type: string
      - description: user pool id
        in: header
        name: X-Pool-ID
        type: string
      - description: user pool id
        in: path
        name: poolId
        required: true
        type: integer
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/request.UserReq'
      responses:
        "200":
          description: OK
      summary: modify user
      tags:
      - user
securityDefinitions:
  Login:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
